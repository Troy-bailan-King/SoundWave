import { SignInButton, SignOutButton, useUser,UserButton } from "@clerk/nextjs";
import { User } from "@clerk/nextjs/dist/types/server";
import { type NextPage } from "next";
import Head from "next/head";
import { api, RouterOutputs } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const user = useUser();
  if(!user.isSignedIn) return null;
  return (
    <div className="flex w-full gap-3">
      <><UserButton />
    <input className="grow bg-transparent outline-none" placeholder="What's on your mind?"></input></>
    </div>
    
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number]

const PostView = (props: PostWithUser) => {
  const {post, author} = props;
  return(
    <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
      <img src={author.profileImageUrl} className="h-14 w-14 rounded-full"/>
            <div className="flex flex-col">
              <div className="flex gap-1 text-slate-300">
                <span>{`@${author.username!} `}</span>
                <span className="font-thin">{`Â·${dayjs(post.createdAt).fromNow()}`}</span> 
              </div>
              <span>{post.content}</span>
            </div>
            
          </div>
  );
} 



const Home: NextPage = () => {
  const user = useUser();
  
  const{data, isLoading} = api.posts.getAll.useQuery();

  if(isLoading) return (<div>Loading...</div>);

  if(!data) return (<div>Something went wrong</div>);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full md:max-w-2xl border-slate-400 border-x ">
        <div className="border-b border-slate-400 p-4">
          {!user.isSignedIn&&<div className="flex justify-center"><SignInButton /></div>}
          {!!user.isSignedIn&&<CreatePostWizard />}
        </div>
        <div className="flex grow flex-col overflow-y-scroll">
      {[...data, ...data].map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
        </div>
      </main>
    </> 
  );
};

export default Home;
